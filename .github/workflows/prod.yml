name: Church push API CI/CD

on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project
        run: mvn clean install
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build, Testes e JaCoCo
        run: mvn clean verify --batch-mode --update-snapshots

      - name: Upload cobertura JaCoCo para SonarQube
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
  pre-deploy:
    name: Pre-deploy
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t dgomes04/api-mang-church .

      - name: Push Docker image
        run: docker push dgomes04/api-mang-church

  deploy:
    name: Deploy to Production
    needs: pre-deploy
    runs-on: self-hosted
    steps:
      - name: Pull Docker image
        run: docker pull dgomes04/api-mang-church:latest
      - name: Remove old Docker container
        run: docker rm -f api-mang-church
      - name: Run Docker container
        run: docker run -d -p 8080:8080 -e DATABASE_URL=${{ secrets.DATABASE_URL }} -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} -e DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}' --name api-mang-church dgomes04/api-mang-church:latest

